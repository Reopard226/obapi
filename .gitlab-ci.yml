variables:
  GITLAB_IMAGE: registry.gitlab.com/oceanbolt/iamserver
  GCR_IMAGE_STAGING: eu.gcr.io/ob-api-staging/iamserver
  GCR_IMAGE_PROD: eu.gcr.io/ob-api-prod/iamserver
  GCP_PROJECT_STAGING: ob-api-staging
  GCP_PROJECT_PROD: ob-api-prod

stages:
  - build
  - push
  - deploy

build:
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  variables:
    DOCKER_TLS_DIR: "/certs"
    DOCKER_DRIVER: overlay2
  stage: build
  only:
    - master
    - development
    - merge_requests
  tags:
    - docker
  script:
    - docker pull $GITLAB_IMAGE || true
    - >
      docker build
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_URL=$CI_PROJECT_URL
      --tag $GITLAB_IMAGE:$CI_COMMIT_SHA
      .
    - docker push $GITLAB_IMAGE


push staging:
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GITLAB_DEPLOY_BOT_KEY_STAGING
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: push
  only:
    - development
  variables:
    GIT_STRATEGY: none
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker pull $GITLAB_IMAGE:$CI_COMMIT_SHA
    - docker tag $GITLAB_IMAGE:$CI_COMMIT_SHA $GCR_IMAGE_STAGING:$CI_COMMIT_REF_NAME
    - docker push $GCR_IMAGE_STAGING:$CI_COMMIT_REF_NAME
  environment:
    name: staging

push master:
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GITLAB_DEPLOY_BOT_KEY_PROD
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: push
  variables:
    GIT_STRATEGY: none
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker pull $GITLAB_IMAGE:$CI_COMMIT_SHA
    - docker tag $GITLAB_IMAGE:$CI_COMMIT_SHA $GCR_IMAGE_PROD:$CI_COMMIT_REF_NAME
    - docker push $GCR_IMAGE_PROD:$CI_COMMIT_REF_NAME
  environment:
    name: production


deploy to staging:
  image: google/cloud-sdk:alpine
  stage: deploy
  only:
    - development
    - merge_requests
  variables:
    GIT_STRATEGY: none
  script:
    - gcloud auth activate-service-account --project=oceanbolt-infrastructure --key-file=$GITLAB_DEPLOY_BOT_KEY_STAGING
    - gcloud components install beta
    - >
      gcloud beta run deploy iamserver
      --image $GCR_IMAGE_STAGING:$CI_COMMIT_REF_NAME
      --platform managed
      --region europe-west1
      --update-env-vars ENVKEY=$ENVKEY_STAGING
  environment:
    name: production
    #url: https://api-v2.oceanbolt.com

deploy to prod:
  image: google/cloud-sdk:alpine
  stage: deploy
  only:
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - gcloud auth activate-service-account --project=oceanbolt-infrastructure --key-file=$GITLAB_DEPLOY_BOT_KEY_PROD
    - gcloud components install beta
    - >
      gcloud beta run deploy iamserver-staging
      --image $GCR_IMAGE_PROD:$CI_COMMIT_REF_NAME
      --platform managed
      --region europe-west1
      --update-env-vars ENVKEY=$ENVKEY_PROD
  environment:
    name: staging
    #url: https://api-staging-v2.internal.oceanbolt.com
